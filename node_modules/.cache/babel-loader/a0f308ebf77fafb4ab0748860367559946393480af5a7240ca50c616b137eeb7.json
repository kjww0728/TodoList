{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-input-box\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"complete-all-btn\"\n}, \"✔\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_alert = _resolveComponent(\"v-alert\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTodoItem = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addTodo && $options.addTodo(...args), [\"enter\"])),\n    placeholder: \"해야 할 일을 입력해주세요\",\n    class: \"todo-input\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.newTodoItem]]), _createCommentVNode(\"Enter key로만 추가할 예정\"), _createCommentVNode(\"<button v-on:click=\\\"addTodo\\\">추가</button>\"), _createVNode(_component_v_alert, {\n    type: \"error\"\n  })]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAgB;gCACvBC,oBAA2C;EAAnCD,KAAK,EAAC;AAAkB,GAAC,GAAC;;;;uBADtCE,oBAMM,OANNC,UAMM,GALFC,UAA2C,kBAC3CH,oBAAoH;IAA7GI,IAAI,EAAC,MAAM;+DAAUC,iBAAW;IAAOC,OAAK,mDAAQC,6CAAO;IAAEC,WAAW,EAAC,gBAAgB;IAACT,KAAK,EAAC;iEAA3EM,iBAAW,KACvCI,yCAAyB,EACzBA,iEAA+C,EAC/CC,aAAgCC;IAAvBP,IAAI,EAAC;EAAO","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","type","$data","onKeyup","$options","placeholder","_createCommentVNode","_createVNode","_component_v_alert"],"sourceRoot":"","sources":["C:\\JI\\test_vue\\vue-project\\src\\components\\TodoInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"todo-input-box\">\r\n        <button class=\"complete-all-btn\">✔</button>\r\n        <input type=\"text\" v-model=\"newTodoItem\" v-on:keyup.enter=\"addTodo\" placeholder=\"해야 할 일을 입력해주세요\" class=\"todo-input\">\r\n        <!--Enter key로만 추가할 예정-->\r\n        <!--<button v-on:click=\"addTodo\">추가</button>-->\r\n        <v-alert type=\"error\"></v-alert>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            newTodoItem: '',\r\n            testItem:''\r\n        }\r\n    },\r\n    methods: {\r\n        addTodo(){\r\n            if(this.newTodoItem !== ''){\r\n                //inputbox에 입력된 텍스트의 앞, 뒤 공백문자열 제거\r\n               // var obj = {completed: false, item:this.newtodoItem};\r\n                var value = this.newTodoItem && this.newTodoItem.trim();\r\n                //App컴포넌트로 이벤트 전달\r\n                this.$emit('addTodo', value);\r\n               // this.$emit('addTodo', JSON.stringify(obj));\r\n                this.clearInputbox();\r\n            }\r\n        },\r\n        clearInputbox(){\r\n            this.newTodoItem = ''; \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n.todo-input-box {\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    flex-direction: row;\r\n    height: 3rem;\r\n    border-bottom: 1px solid #ddd;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n.todo-input {\r\n    width: 80%;\r\n    text-align: center;\r\n    border: 0;\r\n    outline: none;\r\n    font-size: 1.3rem;\r\n}\r\n\r\n.complete-all-btn {\r\n    color: gray;\r\n    min-width: none;\r\n    min-height: none;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    margin: 0.5rem 0.5rem;\r\n    border-radius: 50px;\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n    \r\n}\r\n\r\n.complete-all-btn.checked {\r\n    color: green\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}