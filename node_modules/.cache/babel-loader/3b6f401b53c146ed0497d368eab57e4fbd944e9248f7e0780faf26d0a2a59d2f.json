{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ui = _resolveComponent(\"ui\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_ui, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.propsdata, (todoItem, index) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: todoItem\n      }, [_createTextVNode(_toDisplayString(todoItem) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n        onClick: $event => $options.removeTodo(todoItem, index)\n      }, \"삭제\", 8 /* PROPS */, _hoisted_1)]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;;;uBACIA,oBAOU,kBANNC,aAKKC;sBAJG,MAAqC,oBAAzCF,oBAGKG,6BAH0BC,gBAAS,GAA5BC,QAAQ,EAACC,KAAK;2BAA1BN,oBAGK;QAHsCO,GAAG,EAAEF;MAAQ,sCACjDA,QAAQ,IAAG,GACd,qCAA4D;QAA/CG,OAAK,YAAEC,mBAAU,CAACJ,QAAQ,EAAEC,KAAK;SAAG,IAAE","names":["_createElementBlock","_createVNode","_component_ui","_Fragment","$props","todoItem","index","key","onClick","$options"],"sourceRoot":"","sources":["C:\\JI\\test_vue\\vue-project\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <ui>\r\n            <li v-for=\"(todoItem,index) in propsdata\" :key=\"todoItem\">\r\n                {{ todoItem }}\r\n                <button v-on:click=\"removeTodo(todoItem, index)\">삭제</button>\r\n            </li>\r\n        </ui>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    created(){\r\n        if(localStorage.length>0){\r\n            for(var i = 0; i<localStorage.length; i++){\r\n                this.todoItems.push(localStorage.key(i));\r\n            }\r\n        }\r\n    },\r\n    props: ['propsdata'],\r\n    methods:{\r\n        removeTodo(todoItem, index){\r\n            localStorage.removeItem(todoItem);\r\n            this.todoItems.splice(index,1);\r\n        }\r\n    }\r\n    \r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}