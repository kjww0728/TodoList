{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  class: \"todo\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  const _component_ui = _resolveComponent(\"ui\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_ui, {\n    class: \"todo-list\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.propsdata, (todoItem, index) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        class: \"todo-item\",\n        key: todoItem\n      }, [_createElementVNode(\"button\", {\n        class: \"checkbox\",\n        type: \"button\",\n        onClick: $event => _ctx.completeTodo(todoItem, index)\n      }, \"✔\", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"span\", _hoisted_2, _toDisplayString(todoItem), 1 /* TEXT */), _createElementVNode(\"button\", {\n        class: \"delBtn\",\n        type: \"button\",\n        onClick: $event => _ctx.removeTodo(todoItem, index)\n      }, \"X\", 8 /* PROPS */, _hoisted_3)]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;;EAKsBA,KAAK,EAAC;AAAM;;;;uBAJ9BC,oBAQU,kBAPNC,aAMKC;IANDH,KAAK,EAAC;EAAW;sBACK,MAAqC,oBAA3DC,oBAIKG,6BAJ4CC,cAAS,GAA5BC,QAAQ,EAACC,KAAK;2BAA5CN,oBAIK;QAJDD,KAAK,EAAC,WAAW;QAA8CQ,GAAG,EAAEF;UACpEG,oBAA2F;QAAnFT,KAAK,EAAC,UAAU;QAACU,IAAI,EAAC,QAAQ;QAAMC,OAAK,YAAEN,iBAAY,CAACC,QAAQ,EAACC,KAAK;SAAG,GAAC,8BAClFE,oBAAwC,QAAxCG,UAAwC,mBAAlBN,QAAQ,kBAC9BG,oBAAwF;QAAhFT,KAAK,EAAC,QAAQ;QAACU,IAAI,EAAC,QAAQ;QAAMC,OAAK,YAAEN,eAAU,CAACC,QAAQ,EAAEC,KAAK;SAAG,GAAC","names":["class","_createElementBlock","_createVNode","_component_ui","_Fragment","_ctx","todoItem","index","key","_createElementVNode","type","onClick","_hoisted_2"],"sourceRoot":"","sources":["C:\\JI\\test_vue\\vue-project\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <ui class=\"todo-list\">\r\n            <li class=\"todo-item\" v-for=\"(todoItem,index) in propsdata\" v-bind:key=\"todoItem\">\r\n                <button class=\"checkbox\" type=\"button\" v-on:click=\"completeTodo(todoItem,index)\">✔</button>\r\n                <span class=\"todo\">{{ todoItem }}</span>\r\n                <button class=\"delBtn\" type=\"button\" v-on:click=\"removeTodo(todoItem, index)\">X</button>\r\n            </li>\r\n        </ui>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: ['propsdata'],\r\n    methods:{\r\n        removeTodo(todoItem, index){\r\n            this.$emit('removeTodo',todoItem, index);\r\n        }\r\n/*        \r\n        completeTodo(todoItem, index){\r\n           \r\n        }\r\n    }\r\n  */  \r\n}\r\n</script>\r\n\r\n<style>\r\n.todo-item {\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 3rem;\r\n    border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.todo-item:hover .delBtn {\r\n    opacity: 1;\r\n}\r\n\r\n.checkbox {\r\n    min-width: none;\r\n    min-height: none;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    margin: 0.5rem 0.5rem;\r\n    border-radius: 50px;\r\n    border: 1px solid lightgray;\r\n    cursor: pointer;\r\n    text-align: center;\r\n}\r\n\r\n.todo-item.checked .checkbox{\r\n    border: 2px solid darkgray;\r\n    color: green;\r\n}\r\n\r\n.todo {\r\n    font-size: 1.3rem;\r\n    padding: 0 1rem;\r\n    width: 80%;\r\n}\r\n\r\n.todo-item.checked .todo{\r\n font-style: italic;\r\n text-decoration: line-through;\r\n color: lightgray;\r\n}\r\n\r\n.delBtn {\r\n    opacity: 1;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    font-size: 1.5rem;\r\n    font-weight: lighter;\r\n    cursor: pointer;\r\n}\r\n\r\n.edit-input {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 590px;\r\n    height: 2.8rem;\r\n    margin: 0;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}