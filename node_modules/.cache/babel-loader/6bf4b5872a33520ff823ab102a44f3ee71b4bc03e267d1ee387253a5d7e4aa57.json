{"ast":null,"code":"export default {\n  data() {\n    return {\n      newTodoItem: ''\n    };\n  },\n  props: {\n    completed: Boolean,\n    item: String\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodoItem !== '') {\n        //inputbox에 입력된 텍스트의 앞, 뒤 공백문자열 제거\n        var value = this.newTodoItem && this.newTodoItem.trim();\n        //완료 여부를 포함한 객체 내보내기\n        var obj = {\n          completed: false,\n          item: value\n        };\n        //App컴포넌트로 이벤트 전달\n        this.$emit('addTodo', JSON.stringify(obj.item)); //addTodo의 리턴 값으로 obj객체 전달\n\n        //this.$emit('addTodo', value);\n        this.clearInputbox();\n      }\n    },\n    clearInputbox() {\n      this.newTodoItem = '';\n    },\n    checkedAll() {\n      this.$emit('checkedAll', completed, item);\n    }\n  }\n};","map":{"version":3,"mappings":"AAWA,eAAe;EACXA,IAAI,GAAE;IACF,OAAM;MACFC,WAAW,EAAC;IAChB;EACJ,CAAC;EACDC,KAAK,EAAE;IAACC,SAAS,EAACC,OAAO;IAACC,IAAI,EAACC;EAAM,CAAC;EACtCC,OAAO,EAAE;IACLC,OAAO,GAAE;MACL,IAAG,IAAI,CAACP,WAAU,KAAM,EAAE,EAAC;QACvB;QACA,IAAIQ,KAAI,GAAI,IAAI,CAACR,WAAU,IAAK,IAAI,CAACA,WAAW,CAACS,IAAI,EAAE;QACvD;QACA,IAAIC,GAAE,GAAI;UAACR,SAAS,EAAE,KAAK;UAAEE,IAAI,EAAEI;QAAK,CAAC;QACzC;QACA,IAAI,CAACG,KAAK,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACH,GAAG,CAACN,IAAI,CAAC,CAAC,EAAE;;QAEjD;QACA,IAAI,CAACU,aAAa,EAAE;MACxB;IACJ,CAAC;IACDA,aAAa,GAAE;MACX,IAAI,CAACd,WAAU,GAAI,EAAE;IACzB,CAAC;IACDe,UAAU,GAAE;MACR,IAAI,CAACJ,KAAK,CAAC,YAAY,EAAET,SAAS,EAAEE,IAAI,CAAC;IAC7C;EACJ;AACJ","names":["data","newTodoItem","props","completed","Boolean","item","String","methods","addTodo","value","trim","obj","$emit","JSON","stringify","clearInputbox","checkedAll"],"sourceRoot":"","sources":["C:\\JI\\test_vue\\vue-project\\src\\components\\TodoInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"todo-input-box\">\r\n        <button class=\"complete-all-btn\" v-on:click=\"checkedAll(completed, item)\">✔</button>\r\n        <input type=\"text\" v-model=\"newTodoItem\" v-on:keyup.enter=\"addTodo\" placeholder=\"해야 할 일을 입력해주세요\" class=\"todo-input\">\r\n        <!--Enter key로만 추가할 예정-->\r\n        <!--<button v-on:click=\"addTodo\">추가</button>-->\r\n        <v-alert type=\"error\"></v-alert>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            newTodoItem:'',\r\n        }\r\n    },\r\n    props: {completed:Boolean,item:String},\r\n    methods: {\r\n        addTodo(){\r\n            if(this.newTodoItem !== ''){\r\n                //inputbox에 입력된 텍스트의 앞, 뒤 공백문자열 제거\r\n                var value = this.newTodoItem && this.newTodoItem.trim();\r\n                //완료 여부를 포함한 객체 내보내기\r\n                var obj = {completed: false, item: value};\r\n                //App컴포넌트로 이벤트 전달\r\n                this.$emit('addTodo', JSON.stringify(obj.item)); //addTodo의 리턴 값으로 obj객체 전달\r\n\r\n                //this.$emit('addTodo', value);\r\n                this.clearInputbox();\r\n            }\r\n        },\r\n        clearInputbox(){\r\n            this.newTodoItem = ''; \r\n        },\r\n        checkedAll(){\r\n            this.$emit('checkedAll', completed, item);\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n.todo-input-box {\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    flex-direction: row;\r\n    height: 3rem;\r\n    border-bottom: 1px solid #ddd;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n.todo-input {\r\n    width: 80%;\r\n    text-align: center;\r\n    border: 0;\r\n    outline: none;\r\n    font-size: 1.3rem;\r\n}\r\n\r\n.complete-all-btn {\r\n    color: gray;\r\n    min-width: none;\r\n    min-height: none;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    margin: 0.5rem 0.5rem;\r\n    border-radius: 50px;\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n    \r\n}\r\n\r\n.complete-all-btn.checked {\r\n    color: green\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}