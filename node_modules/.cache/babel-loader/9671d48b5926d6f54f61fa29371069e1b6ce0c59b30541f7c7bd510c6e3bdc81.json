{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-input-box\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: \"complete-all-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.CheckAllTodo())\n  }, \"✔\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.newTodoItem = $event),\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => _ctx.addTodo && _ctx.addTodo(...args), [\"enter\"])),\n    placeholder: \"해야 할 일을 입력해주세요\",\n    class: \"todo-input\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.newTodoItem]])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAgB;;uBAA3BC,oBAGM,OAHNC,UAGM,GAFFC,oBAAuE;IAA/DH,KAAK,EAAC,kBAAkB;IAAMI,OAAK,sCAAEC,iBAAY;KAAI,GAAC,mBAC9DF,oBAAoH;IAA7GG,IAAI,EAAC,MAAM;+DAAUD,gBAAW;IAAOE,OAAK,mDAAQF,qCAAO;IAAEG,WAAW,EAAC,gBAAgB;IAACR,KAAK,EAAC;iEAA3EK,gBAAW","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_ctx","type","onKeyup","placeholder"],"sourceRoot":"","sources":["C:\\JI\\test_vue\\vue-project\\src\\components\\TodoInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"todo-input-box\">\r\n        <button class=\"complete-all-btn\" v-on:click=\"CheckAllTodo()\">✔</button>\r\n        <input type=\"text\" v-model=\"newTodoItem\" v-on:keyup.enter=\"addTodo\" placeholder=\"해야 할 일을 입력해주세요\" class=\"todo-input\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: ['propsdata'],\r\n    data(){\r\n        return{\r\n            newTodoItem:'',\r\n        }\r\n    },\r\n    computed:{\r\n\r\n    },\r\n    methods: {\r\n        addTodo(){\r\n            if(this.newTodoItem !== ''){\r\n                //inputbox에 입력된 텍스트의 앞, 뒤 공백문자열 제거\r\n                var value = this.newTodoItem && this.newTodoItem.trim();\r\n                //완료 여부를 포함한 객체 내보내기\r\n                var obj = {completed: false, item: value};\r\n                //App컴포넌트로 이벤트 전달\r\n                this.$emit('addTodo', .(obj.item));\r\n                //this.$emit('addTodo', value);\r\n                this.clearInputbox();\r\n            }\r\n        },\r\n        clearInputbox(){\r\n            this.newTodoItem = ''; \r\n        },\r\n        CheckAllTodo(){\r\n            this.$emit('CheckAllTodo');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n.todo-input-box {\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    flex-direction: row;\r\n    height: 3rem;\r\n    border-bottom: 1px solid #ddd;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n.todo-input {\r\n    width: 80%;\r\n    text-align: center;\r\n    border: 0;\r\n    outline: none;\r\n    font-size: 1.3rem;\r\n}\r\n\r\n.complete-all-btn {\r\n    color: gray;\r\n    min-width: none;\r\n    min-height: none;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    margin: 0.5rem 0.5rem;\r\n    border-radius: 50px;\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n    \r\n}\r\n\r\n.complete-all-btn.checked {\r\n    color: green\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}