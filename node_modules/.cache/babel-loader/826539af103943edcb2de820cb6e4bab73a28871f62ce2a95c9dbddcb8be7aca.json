{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ui = _resolveComponent(\"ui\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_createVNode(_component_ui, {\n    class: \"todo-list\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.propsdata, (todoItem, index) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        class: \"todo-item\",\n        key: todoItem.item\n      }, [_createElementVNode(\"button\", {\n        class: \"checkbox\",\n        type: \"button\",\n        onClick: $event => $options.toggleTodo(todoItem, index)\n      }, [_withDirectives(_createElementVNode(\"span\", null, \"✔\", 512 /* NEED_PATCH */), [[_vShow, todoItem.completed]])], 8 /* PROPS */, _hoisted_1), _createElementVNode(\"span\", {\n        class: _normalizeClass([\"todo\", {\n          CheckBtnCompleted: todoItem.completed\n        }])\n      }, _toDisplayString(todoItem.item), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n        class: \"delBtn\",\n        type: \"button\",\n        onClick: $event => $options.removeTodo(todoItem, index)\n      }, \"X\", 8 /* PROPS */, _hoisted_2)]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"mappings":";;;;;uBACIA,oBAQU,kBAPNC,aAMKC;IANDC,KAAK,EAAC;EAAW;sBACK,MAAqC,oBAA3DH,oBAIKI,6BAJ4CC,gBAAS,GAA5BC,QAAQ,EAACC,KAAK;2BAA5CP,oBAIK;QAJDG,KAAK,EAAC,WAAW;QAA8CK,GAAG,EAAEF,QAAQ,CAACG;UAC7EC,oBAAqI;QAA7HP,KAAK,EAAC,UAAU;QAACQ,IAAI,EAAC,QAAQ;QAAMC,OAAK,YAAEC,mBAAU,CAACP,QAAQ,EAAEC,KAAK;0BAAKG,oBAA0C,cAAR,GAAC,mCAArBJ,QAAQ,CAACQ,SAAS,kCAClHJ,oBAAmG;QAA7FP,KAAK,mBAAC,MAAM;UAAAY,mBAAkCT,QAAQ,CAACQ;QAAS;0BAAMR,QAAQ,CAACG,IAAI,yBACzFC,oBAAwF;QAAhFP,KAAK,EAAC,QAAQ;QAACQ,IAAI,EAAC,QAAQ;QAAMC,OAAK,YAAEC,mBAAU,CAACP,QAAQ,EAAEC,KAAK;SAAG,GAAC","names":["_createElementBlock","_createVNode","_component_ui","class","_Fragment","$props","todoItem","index","key","item","_createElementVNode","type","onClick","$options","completed","CheckBtnCompleted"],"sourceRoot":"","sources":["C:\\JI\\test_vue\\vue-project\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <section>\r\n        <ui class=\"todo-list\">\r\n            <li class=\"todo-item\" v-for=\"(todoItem,index) in propsdata\" v-bind:key=\"todoItem.item\" >\r\n                <button class=\"checkbox\" type=\"button\" v-on:click=\"toggleTodo(todoItem, index)\" > <span v-show=\"todoItem.completed\">✔</span></button>\r\n                <span class=\"todo\" v-bind:class=\"{CheckBtnCompleted:todoItem.completed}\">{{ todoItem.item }}</span>\r\n                <button class=\"delBtn\" type=\"button\" v-on:click=\"removeTodo(todoItem, index)\">X</button>\r\n            </li>\r\n        </ui>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    created(){\r\n        eventBus.$on('')\r\n    },\r\n    props: ['propsdata'],\r\n    methods:{\r\n        removeTodo(todoItem, index){\r\n            this.$emit('removeTodo',todoItem, index);\r\n        },\r\n        toggleTodo(todoItem, index){\r\n            this.$emit('toggleTodo',todoItem, index);\r\n        }\r\n    }\r\n    \r\n}\r\n</script>\r\n\r\n<style>\r\n.todo-item {\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 3rem;\r\n    border-bottom: 1px solid #ddd;\r\n    list-style-type: none;\r\n}\r\n\r\n.todo-item:hover .delBtn {\r\n    opacity: 1;\r\n}\r\n\r\n.checkbox {\r\n    min-width: none;\r\n    min-height: none;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    margin: 0.5rem 0.5rem;\r\n    border-radius: 50px;\r\n    border: 1px solid lightgray;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    opacity:1;\r\n    color: green;\r\n}\r\n\r\n.todo-item.checked .checkbox{\r\n    border: 2px solid darkgray;\r\n    color: green;\r\n}\r\n\r\n.todo {\r\n    font-size: 1.3rem;\r\n    padding: 0 1rem;\r\n    width: 80%;\r\n}\r\n\r\n.todo-item.checked .todo{\r\n font-style: italic;\r\n text-decoration: line-through;\r\n color: lightgray;\r\n}\r\n\r\n.delBtn {\r\n    opacity: 20%;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    font-size: 1rem;\r\n    font-weight: lighter;\r\n    cursor: pointer;\r\n}\r\n\r\n.edit-input {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 590px;\r\n    height: 2.8rem;\r\n    margin: 0;\r\n}\r\n\r\n.CheckBtnCompleted{\r\n    text-decoration:line-through;\r\n    color:darkgrey;\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}